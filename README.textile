h1. Ruby client library for the Google Storage API

GSD is a ruby gem for working with "Google Storage for Developers":http://code.google.com/apis/storage/. This gem is based on "moomerman's GStore gem":https://github.com/moomerman/gstore. Core changes include an Object API, instead of raw XML responses, performance improvements, and support for more operations. This gem also depends on
libxml-ruby for fast XML parsing.

h2. Install the gem

# Not yet published
sudo gem install gsd

h2. Using the gem

Visit "The Google Storage Key Manager":https://sandbox.google.com/storage/m/manage to get your access and secret keys.

In your code just: <code>require 'gsd'</code>

h2. Basic Examples

Create an instance of the client with your credentials:

<pre><code>client = GSD::Client.new(
   :access_key => 'YOUR_ACCESS_KEY',
   :secret_key => 'YOUR_SECRET_KEY'
)

# List all of your existing Buckets
client.list_buckets
</code></pre>

Here are some example bucket operations:

<pre><code># Create a Bucket
client.create_bucket('my_unique_bucket')

# Retrieve a Bucket
client.get_bucket('my_unique_bucket')

# Delete a [empty] Bucket
client.delete_bucket('my_unique_bucket')
</code></pre>

Once you have a bucket you can manipulate objects in the following way:

<pre><code># Store a file in a bucket
client.put_object('my_unique_bucket', 'my_first_object', :data => File.read('mytext.txt'))

# Retrieve the contents of the object in the specified bucket
puts client.get_object('my_unique_bucket', 'my_first_object')

# Alternatively specify an outfile and the contents will be saved to there
client.get_object('my_unique_bucket', 'my_first_object', :outfile => 'retrieved_mytext.txt')

# Delete an object from the bucket
client.delete_object('my_unique_bucket', 'my_first_object')
</code></pre>

h2. Advanced Examples

h3. Query parameters

For certain requests like <code>get_bucket('my_unique_bucket')</code> you can specify query parameters like <code>max-keys</code>, <code>prefix</code>, <code>delimiter</code> and <code>marker</code> (see "The Google Developer Guide":http://code.google.com/apis/storage/docs/developer-guide.html) for more information.

Here's an example with gsd:

<pre><code>client.get_bucket('my_unique_bucket', :params => {:max_keys => 2, :prefix => 'backup'})
</code></pre>

* <code>max_keys</code> is converted to <code>max-keys</code> so you can use the ruby symbol without quotes. <code>:"max-keys"</code> and <code>"max-keys"</code> also work

h3. Access Control

Here is how you retrieve the ACL for a bucket or object:

<pre><code>client.get_bucket('my_unique_bucket', :params => {:acl => ''})
client.get_bucket('my_unique_bucket', 'my_first_object', :params => {:acl => ''})
</pre></code>

To create a bucket or object with one of the pre-defined ACL's:

<pre><code>client.create_bucket('my_public_bucket', :headers => {:x_goog_acl => 'public-read'})
client.create_object('my_public_bucket', 'my_public_object', :headers => {:x_goog_acl => 'public-read-write'})
</code></pre>

* <code>x_goog_acl</code> is converted to <code>x-goog-acl</code> so you can use the ruby symbol without quotes. <code>:"x-goog-acl"</code> and <code>"x-goog-acl"</code> also work
